<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false" scan="false">

    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <if condition='"${spring.profiles.active}".contains("production")'>
        <then>
            <appender name="FILEOUT" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <file>${SERVICE_LOG_ROOT}/output.log</file>
                <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                    <maxFileSize>10MB</maxFileSize>
                </triggeringPolicy>
                <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                    <fileNamePattern>${SERVICE_LOG_ROOT}/output.%i.log</fileNamePattern>
                </rollingPolicy>
                <encoder>
                    <pattern>${FILE_LOG_PATTERN}</pattern>
                </encoder>
                <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                    <level>INFO</level>
                </filter>
            </appender>

            <appender name="ASYNC_FILEOUT" class="ch.qos.logback.classic.AsyncAppender">
                <neverBlock>true</neverBlock>
                <appender-ref ref="FILEOUT" />
            </appender>

            <appender name="FILEERR" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <file>${SERVICE_LOG_ROOT}/error.log</file>
                <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
                    <maxFileSize>10MB</maxFileSize>
                </triggeringPolicy>
                <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
                    <fileNamePattern>${SERVICE_LOG_ROOT}/error.%i.log</fileNamePattern>
                </rollingPolicy>
                <encoder>
                    <pattern>${FILE_LOG_PATTERN}</pattern>
                </encoder>
                <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
                    <level>ERROR</level>
                </filter>
            </appender>

            <appender name="ASYNC_FILEERR" class="ch.qos.logback.classic.AsyncAppender">
                <neverBlock>true</neverBlock>
                <appender-ref ref="FILEERR" />
            </appender>

<!--            https://github.com/osiegmar/logback-gelf-->
<!--            <appender name="GRAYLOG" class="de.siegmar.logbackgelf.GelfUdpAppender">-->
<!--                <graylogHost>${GRAYLOG_HOST}</graylogHost>-->
<!--                <encoder class="de.siegmar.logbackgelf.GelfEncoder">-->
<!--                    <includeMdcData>true</includeMdcData>-->
<!--                    <includeMarker>true</includeMarker>-->
<!--                    <includeLevelName>true</includeLevelName>-->
<!--                    <numbersAsString>false</numbersAsString>-->
<!--                    <shortPatternLayout class="ch.qos.logback.classic.PatternLayout">-->
<!--                        <pattern>%m%nopex</pattern>-->
<!--                    </shortPatternLayout>-->
<!--                    <fullPatternLayout class="ch.qos.logback.classic.PatternLayout">-->
<!--                        <pattern>%m%n</pattern>-->
<!--                    </fullPatternLayout>-->
<!--                    <staticField>facility:${SERVICE_NAME}</staticField>-->
<!--                </encoder>-->
<!--                <filter class="ch.qos.logback.classic.filter.ThresholdFilter">-->
<!--                    <level>WARN</level>-->
<!--                </filter>-->
<!--            </appender>-->

<!--            <appender name="ASYNC_GRAYLOG" class="ch.qos.logback.classic.AsyncAppender">-->
<!--                <neverBlock>true</neverBlock>-->
<!--                <appender-ref ref="GRAYLOG" />-->
<!--            </appender>-->

            <root level="INFO">
                <appender-ref ref="ASYNC_FILEOUT"/>
                <appender-ref ref="ASYNC_FILEERR"/>
                <!--<appender-ref ref="ASYNC_GRAYLOG"/>-->
            </root>
        </then>
        <else>
            <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
                <encoder>
                    <pattern>${FILE_LOG_PATTERN}</pattern>
                </encoder>
            </appender>

            <root level="INFO">
                <appender-ref ref="CONSOLE"/>
            </root>
        </else>
    </if>
</configuration>